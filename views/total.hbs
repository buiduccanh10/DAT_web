<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>BC Tổng hợp</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
        }

        .export-button {
            padding: 10px 20px;
            background-color: #0fa85c;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .export-button:hover {
            background-color: #065326;
        }

        .checkbox-container {
            display: flex;
            flex-wrap: wrap;
        }

        .checkbox-item {
            margin-right: 10px;
            margin-bottom: 10px;
        }

        .checkbox-item label {
            margin-left: 5px;
        }

        /* Optional: Style the checkboxes */
        .checkbox-item input[type="checkbox"] {
            margin-right: 5px;
        }

        .checkbox-form{
            margin-bottom: 10px;
        }

        .filter-button {
            padding: 10px 20px;
            background-color: rgb(29, 127, 218);
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .filter-button:hover {
            background-color: rgb(0, 105, 217);
        }

        .card {
            margin: 20px;
        }
        .warning {
        margin: 20px;
        padding: 15px;
        background-color: #fff3cd;
        border: 1px solid #ffeeba;
        border-radius: 5px;
        display: flex;
        color: rgb(158, 158, 2);
    }
    </style>
  </head>
  <body>
     
<table id="hide" style="display:none;">
          <thead>
            <tr>
                <th>Ảnh</th>
                <th>Mã học viên</th>
                <th>Khoá học</th>
                <th>Họ tên</th>
                <th>Ngày sinh</th>
                <th>Giới tính</th>
                <th>Số CCCD</th>
                <th>Hạng lái xe</th>
                <th>Tổng thời gian B11</th>
                <th>Tổng quãng đường B11</th>
                <th>Tổng thời gian sáng</th>
                <th>Tổng thời gian tối</th>
                <th>Tổng quãng đường sáng</th>
                <th>Tổng quãng đường tối</th>
                <th>Tổng thời gian</th>
                <th>Tổng quãng đường</th>
                <th>Trạng thái</th>
                <th>Lý do</th>
                <th hidden>B1</th>
                <th hidden>B2</th>
                <th hidden>C</th>
                <th hidden>MaKhoaHoc</th>
            </tr>
        </thead>
        <tbody>
            {{#each total}}
            <tr>
                <td><img src="data:image/jpeg;base64,{{ this.Anh}}" class="image" alt="Ảnh" style="height:130px;width:100px"></td>
                <td>{{ this.MaHocVien}}</td>
                <td>{{ this.KhoaHoc}}</td>
                <td>{{ this.HoTen}}</td>
                <td>{{ this.NgaySinh}}</td>
                <td>{{ this.GioiTinh}}</td>
                <td>{{ this.SoCMT}}</td>
                <td>{{ this.Category}}</td>
                <td>{{ this.TongThoiGianXeSoTuDong}}</td>
                <td>{{ this.TongQuangDuongXeSoTuDong}}</td>
                <td>{{ this.TotalMorningTime}}</td>
                <td>{{ this.TotalEveningTime}}</td>
                <td>{{ this.TotalMorningDistance}}</td>
                <td>{{ this.TotalEveningDistance}}</td>
                <td>{{ this.TotalDuration}}</td>
                <td>{{ this.TotalDistance}}</td>
                {{#if this.TrangThai}}
                <td class="status">Bảo lưu</td>
                {{else}}
                <td>Đạt</td>
                {{/if}}
                <td>{{ this.LyDo}}</td>
                <td hidden>{{ this.B1}}</td>
                <td hidden>{{ this.B2}}</td>
                <td hidden>{{ this.C}}</td>
                <td hidden>{{ this.MaKhoaHoc}}</td>
            </tr>
            {{/each}}
        </tbody>
</table>
    {{#if missingStudents}}
        <div class="warning">
            <i class="fa-solid fa-circle-exclamation"></i>
            <h6 style="color: rgb(158, 158, 2);">Warning: </h6>
            <h6> Mã học viên '{{missingStudents}}' không khớp với thông tin học viên</h6>
        </div>
    {{/if}}
    
    <div class="card mb-4" style="margin:20px">
      <div class="card-header" style="display: inline-flex; justify-content:space-between;">
        <div>
            <i class="fas fa-table me-1"></i>
            Bảng Báo cáo tổng hợp
            <form action="/computeData" id="computedat" method="get">
                <label for="tenDanhSach">Chọn danh sách phiên học:</label>
                    <select id="tenDanhSach" name="tenDanhSach" onchange="document.getElementById('computedat').submit();">
                        <option value="">Chọn...</option>
                        {{#each distinctTenDanhSach}}
                            <option value="{{this}}" {{#if (eq this ../query)}}selected{{/if}}>{{this}}</option>
                        {{/each}}
                    </select>

                <div class="checkbox-container" id="filterForm" style="display:none; margin-top:10px">
                {{#each kh}}
                    <div class="checkbox-item">
                        <input 
                            type="checkbox" 
                            id="khoahoc_{{@index}}" 
                            name="khoahoc" 
                            value="{{this.KhoaHoc}}" 
                            onchange="document.getElementById('computedat').submit();"
                            {{#if (checkbox this.KhoaHoc ../selectedKhoaHoc)}}checked{{/if}}
                        >
                        <label for="khoahoc_{{@index}}">{{this.KhoaHoc}}</label>
                </div>
                {{/each}}
            </div>
            </form>
        </div>

        <div>
            {{#if query}}
                <button type="button" class="btn btn-danger" id="deleteTotal">
                <i class="fa-solid fa-trash-can"></i>
                Xoá
                </button>
            {{/if}}
            <button class="filter-button" onclick="toggleFilter()" style="margin-right: 10px; margin-left: 10px;"><i class="fas fa-filter"></i></button>
            <button class="export-button" onclick="exportToExcel()">
                <i class="fa-solid fa-file-excel"></i>
                Xuất Excel
            </button>
        </div>
      </div>
      <div class="card-body">

        <table id="datatablesSimple">
          <thead>
            <tr>
                {{!-- <th>Ảnh</th> --}}
                <th>Mã học viên</th>
                <th>Khoá học</th>
                <th>Họ tên</th>
                <th>Ngày sinh</th>
                <th>Giới tính</th>
                <th>Số CCCD</th>
                <th>Hạng lái xe</th>
                <th>Tổng thời gian B11</th>
                <th>Tổng quãng đường B11</th>
                <th>Tổng thời gian sáng</th>
                <th>Tổng thời gian tối</th>
                <th>Tổng quãng đường sáng</th>
                <th>Tổng quãng đường tối</th>
                <th>Tổng thời gian</th>
                <th>Tổng quãng đường</th>
                <th>Trạng thái</th>
                <th>Lý do</th>
                <th hidden>B1</th>
                <th hidden>B2</th>
                <th hidden>C</th>
                <th hidden>MaKhoaHoc</th>
            </tr>
        </thead>
        <tbody>
            {{#each total}}
            <tr>
                {{!-- <td><img src="data:image/jpeg;base64,{{ this.Anh}}" class="image" alt="Ảnh" style="height:130px;width:100px"></td> --}}
                <td>{{ this.MaHocVien}}</td>
                <td>{{ this.KhoaHoc}}</td>
                <td>{{ this.HoTen}}</td>
                <td>{{ this.NgaySinh}}</td>
                <td>{{ this.GioiTinh}}</td>
                <td>{{ this.SoCMT}}</td>
                <td>{{ this.Category}}</td>
                <td>{{ this.TongThoiGianXeSoTuDong}}</td>
                <td>{{ this.TongQuangDuongXeSoTuDong}}</td>
                <td>{{ this.TotalMorningTime}}</td>
                <td>{{ this.TotalEveningTime}}</td>
                <td>{{ this.TotalMorningDistance}}</td>
                <td>{{ this.TotalEveningDistance}}</td>
                <td>{{ this.TotalDuration}}</td>
                <td>{{ this.TotalDistance}}</td>
                {{#if this.TrangThai}}
                <td class="status">Bảo lưu</td>
                {{else}}
                <td>Đạt</td>
                {{/if}}
                <td>{{ this.LyDo}}</td>
                <td hidden>{{ this.B1}}</td>
                <td hidden>{{ this.B2}}</td>
                <td hidden>{{ this.C}}</td>
                <td hidden>{{ this.MaKhoaHoc}}</td>
            </tr>
            {{/each}}
        </tbody>
        </table>
      </div>

    </div>
  </body>
</html>

<script>

document.getElementById("deleteTotal").addEventListener("click", function() {
        if (confirm("Bạn có chắc chắn muốn xóa BC tổng hợp '{{query}}' này không?")) {
          fetch(`/deleteComputeData?tenDanhSach={{query}}`, {
            method: "DELETE",
          })
          .then(response => {
            if (response.ok) {
              alert("Đã xóa thành công!");
               window.location.href = "/allTotal";
            } else {
              alert("Xóa thất bại, vui lòng thử lại.");
            }
          })
          .catch(error => {
            console.error("Error:", error);
            alert("Xóa thất bại, vui lòng thử lại.");
          });
        }
      });

function toggleFilter() {
  const filterForm = document.getElementById('filterForm');
  filterForm.style.display = filterForm.style.display === 'block' ? 'none' : 'block';
}

async function exportToExcel() {
            const table = document.getElementById("hide");
            const rows = Array.from(table.rows);

            // Group and organize data
            const dataByKhoaHoc = {};
            rows.slice(1).forEach(row => {
                const khoaHoc = row.cells[2].innerText;
                if (!dataByKhoaHoc[khoaHoc]) {
                    dataByKhoaHoc[khoaHoc] = [];
                }

                const fullName = row.cells[3].innerText;
                const parts = fullName.split(" ");
                // Assuming last name is the last part of the name
                const firstName = parts.pop();
                const lastName = parts.join(" ");

                dataByKhoaHoc[khoaHoc].push({
                    "Mã học viên": row.cells[1].innerText,
                    "Họ tên": fullName,
                    "Ngày sinh": row.cells[4].innerText,
                    "Giới tính": row.cells[5].innerText,
                    "Số CCCD": row.cells[6].innerText,
                    "Hạng lái xe": row.cells[7].innerText,
                    "Tổng thời gian": row.cells[14].innerText,
                    "Tổng quãng đường(km)": row.cells[15].innerText,
                    "Kết quả": row.cells[16].innerText === "Bảo lưu" ? "Không đạt" : "Đạt",
                    "B1": row.cells[18].innerText,
                    "B2": row.cells[19].innerText,
                    "C": row.cells[20].innerText,
                    "Mã khoá học":row.cells[21].innerText,
                });
            });

            // Sort each group by "Họ tên"
            for (const khoaHoc in dataByKhoaHoc) {
                dataByKhoaHoc[khoaHoc].sort((a, b) => {
                    const partsA = a["Họ tên"].split(" ");
                    const partsB = b["Họ tên"].split(" ");
                    const firstNameA = partsA.pop();
                    const firstNameB = partsB.pop();
                    return firstNameA.localeCompare(firstNameB);
                });
            }

            // Prompt user to provide filename and path for download
            const filename = prompt("Đặt tên tệp:", "example.xlsx");
            if (filename) {
                try {
                    const response = await fetch('/export-to-excel', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ dataByKhoaHoc, filename })
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    const blob = await response.blob();
                    const link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = filename;
                    link.click();
                } catch (error) {
                    console.error('Error exporting to Excel:', error);
                }
            }
        }
    </script>